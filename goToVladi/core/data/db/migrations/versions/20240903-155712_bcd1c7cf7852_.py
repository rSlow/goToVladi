"""empty message

Revision ID: bcd1c7cf7852
Revises: 
Create Date: 2024-09-03 15:57:12.392871

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = 'bcd1c7cf7852'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('DELIVERY', 'INNER', name='restaurant_type').create(op.get_bind())
    op.create_table('restaurant_cuisines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_bot', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('restaurants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('average_check', sa.Integer(), nullable=False),
    sa.Column('site_url', sa.String(), nullable=True),
    sa.Column('type_', postgresql.ENUM('DELIVERY', 'INNER', name='restaurant_type', create_type=False), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('priority', sa.Float(), nullable=False),
    sa.Column('cuisine_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cuisine_id'], ['restaurant_cuisines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurant_phones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurant_photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurant_socials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('restaurant_socials')
    op.drop_table('restaurant_photos')
    op.drop_table('restaurant_phones')
    op.drop_table('restaurants')
    op.drop_table('users')
    op.drop_table('restaurant_cuisines')
    sa.Enum('DELIVERY', 'INNER', name='restaurant_type').drop(op.get_bind())
    # ### end Alembic commands ###
